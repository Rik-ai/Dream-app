[{"/home/xxx/Memories-app/client/src/index.js":"1","/home/xxx/Memories-app/client/src/App.js":"2","/home/xxx/Memories-app/client/src/components/Form/Form.js":"3","/home/xxx/Memories-app/client/src/components/Posts/Posts.js":"4","/home/xxx/Memories-app/client/src/components/Posts/Post/Post.js":"5","/home/xxx/Memories-app/client/src/styles.js":"6","/home/xxx/Memories-app/client/src/components/Form/styles.js":"7","/home/xxx/Memories-app/client/src/components/Posts/Post/styles.js":"8","/home/xxx/Memories-app/client/src/components/Posts/styles.js":"9","/home/xxx/Memories-app/client/src/reducers/index.js":"10","/home/xxx/Memories-app/client/src/reducers/post.js":"11","/home/xxx/Memories-app/client/src/actions/posts.js":"12","/home/xxx/Memories-app/client/src/api/index.js":"13"},{"size":460,"mtime":1611073855176,"results":"14","hashOfConfig":"15"},{"size":1545,"mtime":1611081624340,"results":"16","hashOfConfig":"15"},{"size":2638,"mtime":1611080625596,"results":"17","hashOfConfig":"15"},{"size":777,"mtime":1611077751088,"results":"18","hashOfConfig":"15"},{"size":2079,"mtime":1611081080901,"results":"19","hashOfConfig":"15"},{"size":394,"mtime":1611060737633,"results":"20","hashOfConfig":"15"},{"size":485,"mtime":1611061992493,"results":"21","hashOfConfig":"15"},{"size":1120,"mtime":1611061962287,"results":"22","hashOfConfig":"15"},{"size":291,"mtime":1611062113261,"results":"23","hashOfConfig":"15"},{"size":116,"mtime":1611063333573,"results":"24","hashOfConfig":"15"},{"size":365,"mtime":1611078748188,"results":"25","hashOfConfig":"15"},{"size":804,"mtime":1611081425027,"results":"26","hashOfConfig":"15"},{"size":268,"mtime":1611078391042,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"dc71gz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/xxx/Memories-app/client/src/index.js",[],["56","57"],"/home/xxx/Memories-app/client/src/App.js",[],"/home/xxx/Memories-app/client/src/components/Form/Form.js",[],"/home/xxx/Memories-app/client/src/components/Posts/Posts.js",[],"/home/xxx/Memories-app/client/src/components/Posts/Post/Post.js",[],"/home/xxx/Memories-app/client/src/styles.js",[],"/home/xxx/Memories-app/client/src/components/Form/styles.js",[],"/home/xxx/Memories-app/client/src/components/Posts/Post/styles.js",[],"/home/xxx/Memories-app/client/src/components/Posts/styles.js",[],"/home/xxx/Memories-app/client/src/reducers/index.js",[],"/home/xxx/Memories-app/client/src/reducers/post.js",["58"],"export default (posts = [], action) => {\n    switch (action.type) {\n        case 'UPDATE':\n            return posts.map((post)=> post._id === action.payload._id ? action.payload : post)\n        case 'FETCH_ALL':\n            return action.payload\n        case 'CREATE':\n            return [...posts, action.payload]\n        default:\n            return posts;\n    }\n}","/home/xxx/Memories-app/client/src/actions/posts.js",[],"/home/xxx/Memories-app/client/src/api/index.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":1,"nodeType":"65","endLine":12,"endColumn":2},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]